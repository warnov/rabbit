@page "/stage/{stageId}"
@using rabbit_maui.Core.Models
@inject rabbit_maui.Core.Services.RallyState RallyState

@code {
    [Parameter] public string? stageId { get; set; }
    private Stage? stage;

    protected override void OnParametersSet()
    {
        stage = RallyState.CurrentRally.Stages.FirstOrDefault(s => s.Id == stageId);
    }

    private void AddSegment(double km, double min)
    {
        if (stage is null) return;
        RallyState.AddSegment(stage, km, min);
    }

    private void RemoveSegment(int index)
    {
        if (stage is null) return;
        if (index >= 0 && index < stage.Segments.Count) stage.Segments.RemoveAt(index);
    }

    private double StageTotalDistance =>
    stage?.Segments.Sum(seg => seg.DistanceKm ?? 0) ?? 0;

    private double StageTotalTime =>
    stage?.Segments.Sum(seg => seg.TimeMin ?? 0) ?? 0;

    private double StageAverageSpeed =>
    StageTotalTime > 0 ? Math.Round((StageTotalDistance / StageTotalTime) * 60.0, 1) : 0.0;

}

@if (stage is null)
{
        <p>Stage not found.</p>
}
else
{
        <h2>@stage.Id (@stage.Name)</h2>

        <table>
            <thead>
                <tr>
                    <th>ZR NAME</th>
                    <th>Distance (km)</th>
                    <th>Time (min)</th>
                    <th>Speed (km/h)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @for (int i = 0; i < stage.Segments.Count; i++)
            {
                var s = stage.Segments[i];
                var index = i; // Captura la variable en el scope local
                <tr>
                    <td>@s.Id</td>
                    <td>
                        <input type="number" step="0.1"
                               @bind="stage.Segments[index].DistanceKm"
                               @bind:event="oninput" />
                    </td>
                    <td>
                        <input type="number" step="1"
                               @bind="stage.Segments[index].TimeMin"
                               @bind:event="oninput" />
                    </td>
                    <td>@s.SpeedKmh</td>
                    <td><button @onclick="@(()=>RemoveSegment(index))">Delete</button></td>
                </tr>
            }
            </tbody>
        </table>

        <button @onclick="@(()=>AddSegment(1.000, 1.0))">Add Segment</button>

        <hr />
        <h3>Stage Summary</h3>
        <p>Total Distance: @StageTotalDistance km</p>
        <p>Total Time: @StageTotalTime min</p>
        <p>Average Speed: @StageAverageSpeed km/h</p>

}
